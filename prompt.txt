Q. C++로 만든 pyd가 있는데, 제공하는 입력값과 반환값이 ctypes모듈에서 제공해주는 값이야

MyFaster.cpp ```
#include <cstddef>
#include "assert.h"

#define RAISER(x) assert(!x)
#define raiser RAISER

int MyFast(size_t mode, int a, int b)
{
    switch (mode) {
        case 0:
            return a + b;
        case 1:
            return a - b;
        case 2:
            return a * b;
        case 3:
            return floor(a / b);
        case 4:
            return a % b
        case _:
            KeyError = true;
            RAISER(KeyError);
    };
}
```

MyFasterDLLUser.py ```

from ctypes import c_size_t, c_int
from Myfaster import MyFast

```

`python MyFasterDLLUser.py`는 import가 먹혀?

A. 네, `python MyFasterDLLUser.py`를 실행하면 import가 먹힐 것입니다. 다만, 아직 `MyFast` 함수를 사용하는 부분이 없기 때문에 실행 결과는 아무것도 출력되지 않을 것입니다.

`MyFasterDLLUser.py` 파일에 `MyFast` 함수를 호출하는 코드를 추가하면 실행 결과를 확인할 수 있습니다. 예를 들어 다음과 같이 코드를 추가할 수 있습니다:

```python
from ctypes import c_size_t, c_int
from Myfaster import MyFast

result = MyFast(c_size_t(0), c_int(3), c_int(4))
print(result)
```

이 코드는 `MyFast` 함수를 호출하여 `3 + 4`를 계산하고, 결과를 출력합니다. 이때 `c_size_t`와 `c_int`를 사용하여 C++에서 정의된 인자 타입과 일치시켜야 합니다. 

이런 자료를 참고했어요.
[1] Python Docs - ctypes — A foreign function library for Python (https://docs.python.org/ko/3/library/ctypes.html) 

뤼튼 사용하러 가기 > https://agent.wrtn.ai/5xb91l